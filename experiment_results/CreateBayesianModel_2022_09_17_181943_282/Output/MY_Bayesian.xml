<?xml version="1.0" encoding="UTF-8"?>
<sci:data xmlns:sci="http://www.SciTegic.com/" object="SciTegic.Protocol.1" format="8.0.0">
	<sci:dbitem>
		<sci:component name="MY_Bayesian" version="2">
			<sci:arg name="RunToCompletion" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:help>When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - For Each Data Record&quot;, the subprotocol is re-initialized and executed in its entirety for each individual data record it processes.
&lt;p&gt;
When set to &quot;True - For Each Category&quot;, the data records are divided into categories based on the value of the Categorize Using parameter and then the subprotocol is re-initialized and executed in its entirety for each category of data records. When used in conjunction with &lt;i&gt;Parallel Processing Options&lt;/i&gt;, each category of data records will be sent to the remote server as part of one single batch.</sci:help>
				<sci:member>RunToCompletion Categorize Using</sci:member>
				<sci:legalval selected="true">False</sci:legalval>
				<sci:legalval>True - For Each Data Record</sci:legalval>
				<sci:legalval>True - For Each Category</sci:legalval>
			</sci:arg>
			<sci:arg name="RunToCompletion Categorize Using" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:help>Required when RunToCompletion is set to &lt;i&gt;True - For Each Category&lt;/i&gt;, this parameter specifies the property or properties used to define the categories.</sci:help>
				<sci:validscript>SetInvalidDetails(&apos;This parameter is required when RunToCompletion is set to True - For Each Category&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
				<sci:enabledscript>SetDisabledDetails(&apos;To Enable, Set RunToCompletion to True - For Each Category&apos;);
Parameter(&apos;RunToCompletion&apos;) eq &apos;True - For Each Category&apos;;</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:help>&lt;p&gt;
When set to True, this set of options allows the subprotocol to execute in parallel on one or more independent Pipeline Pilot servers, running locally or remotely.  Additional parameters control the number of data records to send in each process batch, the list of Pipeline Pilot servers to use, the number of protocol processes that can be executed on each server, and whether to preserve the order of the processed data records.
&lt;/p&gt;&lt;p&gt;
Use this option with care, since it will not increase throughput in all circumstances. Generally speaking, it yields improved performance when the parallelization benefits outweigh the data transfer overhead for the specified batch size.  As a rough guide, performance can be improved when each individual batch requires at least 10 seconds to execute, although this can be affected by the size of each data record.
&lt;/p&gt;&lt;p&gt;
When running the protocol with debugging, the subprotocol will provide debugging messages to detail each of the various steps of execution.  Also, components located within the parallel subprotocol will display their debugging messages as well.
&lt;/p&gt;&lt;p&gt;
For more information on the parallel subprotocol options, see &lt;a href=&quot;javascript:DoLink(&apos;scihelpdocs/user/subprots/subprot_parallel_processing.htm&apos;)&quot;&gt;Parallel Processing Subprotocols&lt;/a&gt;.
&lt;/p&gt;
</sci:help>
				<sci:member>Parallel Processing Options Batch Size</sci:member>
				<sci:member>Parallel Processing Options Server</sci:member>
				<sci:member>Parallel Processing Options Preserve Order</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Batch Size" type="LongType" required="true" visibility="visible" multi="false" uimpl="false">
				<sci:help>&lt;p&gt;The number of records to send to the remote server(s) for each subprotocol execution.  In general, performance is optimized when the amount of time required to process each batch is at least 10 seconds (note that this can vary depending on the characteristics of the remote server&apos;s hardware).  Use a batch size of -1 to pass all data in a single batch.&lt;/p&gt;
&lt;p&gt;When &lt;i&gt;RunToCompletion&lt;/i&gt; is set to &quot;True - for each category&quot;, the batch sizes will be determined by the number of records in each individual category.  Therefore, the &lt;i&gt;Batch Size&lt;/i&gt; parameter is not applicable.</sci:help>
				<sci:enabledscript>#parallel := Parameter(&apos;Parallel Processing Options&apos;);
if (not #parallel) then
	SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
end if;
#parallel;</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server" type="StringType" required="false" visibility="visible" multi="false" expanded="true" uimpl="false">
				<sci:help>&lt;p&gt;
A comma-separated list of Pipeline Pilot servers on which to execute the parallel subprotocol.  The server names should be in the same format as the Pipeline Pilot Client&apos;s change server dialog (that is, server-name:port-number).
&lt;/p&gt;&lt;p&gt;
Specifying &lt;b&gt;localhost&lt;/b&gt; as a server will cause the subprotocol to use its own Pipeline Pilot server.  This can be useful on multi-CPU/multi-core systems (where the subprotocol jobs are spawned on the same machine) and Pipeline Pilot Linux clusters (where &apos;localhost&apos; requests spawning the subprotocol jobs on the same cluster).
&lt;/p&gt;</sci:help>
				<sci:member>Parallel Processing Options Server Processes</sci:member>
				<sci:member>Parallel Processing Options Server Run On Grid</sci:member>
				<sci:validscript>SetInvalidDetails(&apos;This parameter is required.&apos;);
Parameter() ne &apos;&apos;;</sci:validscript>
				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server Processes" type="StringType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:help>A comma-separated list of the maximum number of batches that can be simultaneously executed on each remote server.  The number of entries in this parameter must equal the number of servers. If &apos;*&apos; is specified as the number of processes, then that server will only launch as many batches as the administrator of the remote server has permitted.&lt;/br&gt;&lt;/br&gt;For non-Grid Engine job, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;For Grid Engine jobs, the number of jobs will be limited to the value for the maximum number of simultaneous subprotocol grid jobs as defined in the Admin Console even if this value is higher than the value entered here or &apos;*&apos;.&lt;/br&gt;&lt;/br&gt;</sci:help>
				<sci:validscript>/* Server Processes must have the same number of comma separated entries as the Server parameter and must have a value*/
#processes := parameter();
expand(&apos;,&apos;, #processes);
#servers := parameter(&apos;Parallel Processing Options Server&apos;);
expand(&apos;,&apos;, #servers);

if (numvalues(#processes) == 0) then
	SetInvalidDetails(&apos;This parameter is required.&apos;);
else
	SetInvalidDetails(&apos;The number of server processes (&apos; . numvalues(#processes) . &apos;) must equal the number of servers (&apos; . numvalues(#servers) . &apos;).&apos;);
end if;
numvalues(#processes) &gt; 0 and numvalues(#processes) == numvalues(#servers);</sci:validscript>
				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server Run On Grid" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:help>Run subprotocol on grid engine if available.  Note: If no grid engine is configured the subprotocol will still run even if this parameter is set to true.</sci:help>
				<sci:member>Parallel Processing Options Server Run On Grid Queue Name</sci:member>
				<sci:member>Parallel Processing Options Server Run On Grid Grid Options</sci:member>
				<sci:enabledscript>parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server Run On Grid Queue Name" type="StringType" required="false" visibility="visible" multi="false" legalvalsenforced="false" uimpl="false">
				<sci:help>Select the queue name on the grid to submit jobs to. Leave blank to use default queue name.</sci:help>
				<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Server Run On Grid Grid Options" type="StringType" required="false" visibility="visible" multi="true" uimpl="false">
				<sci:help>&lt;p&gt;This is an array of command line options to send to the Grid engine submit command.&lt;/p&gt;
&lt;p&gt;If you just include one line, whatever you enter will be sent &quot;as is&quot; to the submission command.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Just sending options directly to command line - PBS&lt;/b&gt;
&lt;p&gt;-l procs=16 -l walltime=08:00:00 -A PROJECTID&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;There are a number of parameters that Pipeline Pilot will translate to the correct command line options for whichever supported Grid Engine you are using.&lt;/p&gt;
&lt;/br&gt;
&lt;b&gt;Example - Supported parameters&lt;/b&gt;
&lt;p&gt;Account=&amp;lt;Project/Account name&amp;gt;&lt;/p&gt;
&lt;p&gt;Maximum Execution Time=&amp;lt;HH:MM:SS&amp;gt; hours, minutes, seconds - LSF ignores seconds&lt;/p&gt;
&lt;p&gt;Number of Cores=&amp;lt;16&amp;gt;&lt;/p&gt;
&lt;p&gt;Parallel Environment=&amp;lt;The Parallel Environment to use&amp;gt; - Only needed for SGE&lt;/p&gt;
&lt;p&gt;Other=&amp;lt;Additional Parameters sent directly to submit command line&amp;gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Any of these options can be commented out by placing a # in front of them.&lt;/p&gt;
&lt;/br&gt;
					</sci:help>
				<sci:enabledscript>parameter(&apos;Parallel Processing Options Server Run On Grid&apos;);</sci:enabledscript>
				<sci:value>Account=</sci:value>
				<sci:value>Maximum Execution Time=</sci:value>
				<sci:value>Parallel Environment=</sci:value>
				<sci:value>Number of Cores=</sci:value>
				<sci:value>Other=</sci:value>
			</sci:arg>
			<sci:arg name="Parallel Processing Options Preserve Order" type="BoolType" required="false" visibility="visible" multi="false" uimpl="false">
				<sci:help>Whether to preserve the order of the data as it enters and leaves the remote subprotocol.</sci:help>
				<sci:enabledscript>SetDisabledDetails(&quot;This parameter is only applicable if &apos;Parallel Processing Options&apos; is &apos;True&apos;&quot;);
Parameter(&apos;Parallel Processing Options&apos;);</sci:enabledscript>
				<sci:legalval selected="true">True</sci:legalval>
				<sci:legalval>False</sci:legalval>
			</sci:arg>
			<sci:arg name="Tempfiles" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;A comma-delimited list of global properties, each of which is automatically populated with the name of a file in the job&apos;s temporary folder, which always has a unique name.&lt;p/&gt;For each global name, an additional global is created (with the suffix &lt;i&gt;_Filename&lt;/i&gt;) that hold only the leaf file name of the temporary file.&lt;/p&gt;</sci:help>
			</sci:arg>
			<sci:arg name="DeclareLocal" type="StringType" required="false" visibility="visible" multi="false" uimpl="true">
				<sci:help>&lt;p&gt;Lists a set of properties (without the @) to create on the global property list for this subprotocol. Separate property names with commas. Such properties can only be accessed within the scope of this subprotocol and its descendent subprotocols.&lt;p/&gt;

&lt;p&gt;Any global property not declared in this way is created on the top-level global property list and is accessible from all subprotocols, but breaks the encapsulation of the subprotocol and may collide with another property of the same name.&lt;/p&gt;

&lt;p&gt;Therefore, you should always declare a new global property in the &lt;i&gt;DeclareLocal&lt;/i&gt; parameter, to minimize the scope of the global property to the subprotocol where it is used.&lt;/p&gt;

&lt;p&gt;The example &lt;i&gt;DeclareLocal&lt;/i&gt; value below creates 3 global properties in the subprotocol scope. Note that you can initialize the declared global value with a scalar value using the &quot;:=&quot; syntax, as shown. You can surround text string values with quotes to aid clarity.&lt;/p&gt;
&lt;pre&gt;
    SubP_Counter := 0, SubP_NameHash, SubP_TitleText:=&quot;Sample 1&quot;
&lt;/pre&gt;
</sci:help>
			</sci:arg>
			<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
				<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
				<sci:legalval selected="true">Halt</sci:legalval>
				<sci:legalval>Fail</sci:legalval>
				<sci:legalval>Pass</sci:legalval>
			</sci:arg>
			<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
				<sci:help>Component Attributes</sci:help>
				<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
				<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
				<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
				<sci:legalval>ComponentRunsLocal</sci:legalval>
			</sci:arg>
			<sci:arg name="Output" type="StringType" required="true" visibility="visible" multi="true">
				<sci:help>Specifies the name of the model&apos;s output property.</sci:help>
				<sci:legalval type="DoubleType" selected="true">MY_Bayesian</sci:legalval>
			</sci:arg>
			<sci:arg name="Output Options" type="StringType" required="false" visibility="visible" multi="true">
				<sci:help>&lt;P&gt;These control which variants of the output scores will be generated for each selected model.  Selections other than &quot;NormalizedProbability&quot; causes the output property to the appended with a hash sign &quot;#&quot; and the name of the option.  Options are:&lt;/P&gt; &lt;UL&gt;
 &lt;LI&gt;NormalizedProbability: The standard Laplacian-modified Bayesian score.
 &lt;LI&gt;Enrichment: An estimate of enrichment, that is, the increased likelihood (versus random) of this sample being in the &quot;good&quot; category.
 &lt;LI&gt;EstPGood: The estimated probability that the sample is in the &quot;good&quot; category, based on an assumed normal distribution of scores within the good and non-good categories.
 &lt;LI&gt;Prediction: A True/False prediction using the best cutoff value estimated from leave-one-out cross-validation. The cutoff is chosen to minimize the average of the false positive rate and false negative rate.
 &lt;/UL&gt;
 You may select more than one of these options.  In that case, multiple properties will be output.</sci:help>
				<sci:legalval selected="true">NormalizedProbability</sci:legalval>
				<sci:legalval selected="true">Enrichment</sci:legalval>
				<sci:legalval selected="true">EstPGood</sci:legalval>
				<sci:legalval selected="true">Prediction</sci:legalval>
			</sci:arg>
			<sci:arg name="Preferred Class Cutoff" type="StringType" required="false" visibility="visible" multi="true">
				<sci:help>Cutoff value for distinguishing &quot;good&quot; from &quot;bad&quot; samples when making predictions. &quot;Default&quot; indicates that the cutoff derived from leave-one-out cross-validation when building the model should be used. 
&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Classification models generate numerical scores or probabilities as their raw output. A cutoff value is then used in order to convert these scores into class predictions. Adjusting the cutoff from its default value may yield better class predictions for some models, particularly when the model&apos;s training data were imbalanced. Changing the value of &lt;i&gt;Preferred Class Cutoff&lt;/i&gt; changes the class predictions but has no effect on the output scores.
&lt;/ul&gt;</sci:help>
				<sci:value>Default</sci:value>
			</sci:arg>
			<sci:arg name="Error Option" type="StringType" required="false" visibility="visible" multi="false">
				<sci:help>&lt;P&gt;This controls what happens when a model fails to calculate its output. The options are:&lt;/P&gt; &lt;UL&gt;
 &lt;LI&gt;&lt;B&gt;Leave Undefined:&lt;/B&gt; Leave the property undefined.
 &lt;LI&gt;&lt;B&gt;Return NULL:&lt;/B&gt; Return the property with the string NULL.
 &lt;LI&gt;&lt;B&gt;Return Error Text:&lt;/B&gt; Return text containing information about why the output could not be calculated.
 &lt;/UL&gt;
</sci:help>
				<sci:legalval>Leave Undefined</sci:legalval>
				<sci:legalval>Return NULL</sci:legalval>
				<sci:legalval selected="true">Return Error Text</sci:legalval>
			</sci:arg>
			<sci:arg name="Use Memory Cache" type="BoolType" required="false" visibility="visible" multi="false">
				<sci:help>Specifies whether to cache model in memory to reduce startup time when making predictions over multiple protocol runs. Requires the use of protocol pooling.</sci:help>
				<sci:member>Clear Cache When Done</sci:member>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Clear Cache When Done" type="BoolType" required="false" visibility="visible" multi="false">
				<sci:help>Specifies whether clear the cached model when finished. Set this to True when no further calculations will be done with the model, and you wish to free the memory the model is consuming.</sci:help>
				<sci:enabledscript>Parameter(&apos;Use Memory Cache&apos;)</sci:enabledscript>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="Allow Missing Data" type="BoolType" required="false" visibility="visible" multi="false">
				<sci:help>Specifies whether to calculate an output property when one or more input properties used in its calculation are missing. &lt;p&gt;If False, then the value specified by &lt;i&gt;Error Option&lt;/i&gt; is assigned to the property when any input property is missing, and the data record is sent out the Fail port. &lt;p&gt;If True, the output property is calculated even when input properties are missing, with any contribution from missing properties omitted from the calculation. The resulting prediction is sent out the Pass port along with a property named &lt;b&gt;ErrorText&lt;/b&gt; containing the value &quot;CalculationMissingRequiredProperties&quot;. Use this option when you view a possibly flawed prediction based on incomplete data as better than no prediction at all.</sci:help>
				<sci:legalval>True</sci:legalval>
				<sci:legalval selected="true">False</sci:legalval>
			</sci:arg>
			<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Custom Error Message</sci:help>
			</sci:arg>
			<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>MY_Bayesian</sci:value>
			</sci:arg>
			<sci:arg name="ProtocolAutoLayout" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol AutoLayout</sci:help>
				<sci:value>1</sci:value>
			</sci:arg>
			<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentIcon" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>ModelNode</sci:value>
			</sci:arg>
			<sci:arg name="ComponentRevision" type="LongType" required="true" visibility="nevershow" multi="false">
				<sci:help>Component Revision</sci:help>
				<sci:value>790</sci:value>
			</sci:arg>
			<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The Unique ID for this item</sci:help>
				<sci:value>{D7426A85-5118-40AF-9B26-4C1D2B1FA9A7}</sci:value>
			</sci:arg>
			<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:value>90 -95</sci:value>
			</sci:arg>
			<sci:arg name="ByReference" type="BoolType" required="false" visibility="nevershow" multi="false">
				<sci:help>By Ref</sci:help>
				<sci:value>0</sci:value>
			</sci:arg>
			<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Help for the component</sci:help>
				<sci:value>100</sci:value>
				<sci:value>Calculates the value of &quot;MY_Bayesian&quot;</sci:value>
				<sci:value>&lt;!-- Header --&gt;
&lt;A name=&quot;Top&quot;&gt;&lt;/A&gt;&lt;P&gt;Calculates the property MY_Bayesian. &lt;/P&gt;
&lt;P&gt;&lt;/P&gt;&lt;P&gt;The help text contains these additional sections of information:&lt;br&gt;&lt;A href=&quot;#ValidationTable&quot;&gt;&lt;B&gt;Cross-validation Results&lt;/B&gt;&lt;/A&gt;&lt;br&gt;&lt;A href=&quot;#EnrichmentTable&quot;&gt;&lt;B&gt;Enrichment Results&lt;/B&gt;&lt;/A&gt;&lt;br&gt;&lt;A href=&quot;#PercentileTable&quot;&gt;&lt;B&gt;Percentile Results&lt;/B&gt;&lt;/A&gt;&lt;br&gt;&lt;A href=&quot;#CategoryStatisticsTable&quot;&gt;&lt;B&gt;Category Statistics Results&lt;/B&gt;&lt;/A&gt;&lt;br&gt;&lt;A href=&quot;#NonValidatedTable&quot;&gt;&lt;B&gt;Non-validated Models Results&lt;/B&gt;&lt;/A&gt;&lt;br&gt;&lt;A href=&quot;#TrainingData&quot;&gt;&lt;B&gt;Training Data Information&lt;/B&gt;&lt;/A&gt;&lt;br&gt;&lt;A href=&quot;#ConstructionInfo&quot;&gt;&lt;B&gt;Model Construction Information&lt;/B&gt;&lt;/A&gt;&lt;br&gt;&lt;A href=&quot;#ModelParameters&quot;&gt;&lt;B&gt;Model Construction Parameters&lt;/B&gt;&lt;/A&gt;&lt;!-- Section --&gt;
&lt;!-- LinkText: Cross-validation Results--&gt;
&lt;P&gt;&lt;A name=&quot;ValidationTable&quot;&gt;&lt;/A&gt;&lt;U&gt;&lt;H5&gt;Leave-one-out Cross-Validation Results&lt;/H5&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;This model was built using 457 samples, and validated using a leave-one-out cross-validation. Each sample was left out one at a time, and a model built using the results of the samples, and that model used to predict the left-out sample. Once all the samples had predictions, a ROC plot was generated, and the area under the curve (&lt;strong&gt;XV ROC AUC&lt;/strong&gt;) calculated.&lt;/P&gt;
&lt;P&gt;&lt;strong&gt;Best Split&lt;/strong&gt; was calculated by picking the split that minimized the sum of the percent misclassified for category members and for category nonmembers, using the cross-validated score for each sample. Using that split, a contingency table is constructed, containing the number of true positives (&lt;strong&gt;TP&lt;/strong&gt;), false negatives (&lt;strong&gt;FN&lt;/strong&gt;), false positives (&lt;strong&gt;FP&lt;/strong&gt;), and true negatives (&lt;strong&gt;TN&lt;/strong&gt;). &lt;/P&gt;
&lt;table&gt;
&lt;tr&gt;&lt;th&gt;Output&lt;/th&gt;&lt;th&gt;XV ROC AUC&lt;/th&gt;&lt;th&gt;Best Split&lt;/th&gt;&lt;th&gt;TP/FN&lt;br&gt;FP/TN&lt;/th&gt;
&lt;th&gt;# in Category&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;MY_Bayesian&lt;/td&gt;
&lt;td&gt;0.992&lt;/td&gt;&lt;td&gt;-6.017&lt;/td&gt;&lt;td align=center&gt;210/11&lt;br&gt;3/233&lt;/td&gt;&lt;td&gt;221&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;!-- Section --&gt;
&lt;!-- LinkText: Enrichment Results--&gt;
&lt;P&gt;&lt;A name=&quot;EnrichmentTable&quot;&gt;&lt;/A&gt;&lt;U&gt;&lt;H5&gt;Enrichment Results&lt;/H5&gt;&lt;/U&gt;&lt;P align=&quot;right&quot;&gt;&lt;A href=&quot;#Top&quot;&gt;&lt;I&gt;Back to Top&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;/P&gt;&lt;P&gt;This model was built using 457 samples, and validated using a leave-one-out cross-validation. Each sample was left out one at a time, and a model built using the results of the samples, and that model used to predict the left-out sample. Once all the samples had predictions, an enrichment plot was generated, and the percentage of true category members captured at a particular percentage cutoff. (For example, in a column labeled &quot;1%&quot; would be the percentage of true category members (e.g., actives) that were found in the top 1% of the list, when sorted by the model score.)&lt;/P&gt;
&lt;P&gt;This table shows the output name, the percentage of samples that are in that particular category, the number of category members, and the percentage of true members found. Percentages that are less than 100% are in &lt;b&gt;bold&lt;/b&gt;.&lt;/P&gt;
&lt;table&gt;
&lt;tr&gt;&lt;th&gt;Output&lt;/th&gt;&lt;th&gt;&lt;center&gt;Category %&lt;/center&gt;&lt;/th&gt;&lt;th&gt;1%&lt;/th&gt;&lt;th&gt;5%&lt;/th&gt;&lt;th&gt;10%&lt;/th&gt;&lt;th&gt;25%&lt;/th&gt;&lt;th&gt;50%&lt;/th&gt;&lt;th&gt;75%&lt;/th&gt;&lt;th&gt;90%&lt;/th&gt;&lt;th&gt;95%&lt;/th&gt;&lt;th&gt;99%&lt;/th&gt;&lt;tr&gt;
&lt;td&gt;MY_Bayesian&lt;/td&gt;
&lt;td&gt;&lt;center&gt;48.359%&lt;/center&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;1.8%&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;10%&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;20.4%&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;51.6%&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;b&gt;96.8%&lt;/b&gt;&lt;/td&gt;&lt;td&gt;100%&lt;/td&gt;&lt;td&gt;100%&lt;/td&gt;&lt;td&gt;100%&lt;/td&gt;&lt;td&gt;100%&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;!-- Section --&gt;
&lt;!-- LinkText: Percentile Results--&gt;
&lt;P&gt;&lt;A name=&quot;PercentileTable&quot;&gt;&lt;/A&gt;&lt;U&gt;&lt;H5&gt;Percentile Results&lt;/H5&gt;&lt;/U&gt;&lt;P align=&quot;right&quot;&gt;&lt;A href=&quot;#Top&quot;&gt;&lt;I&gt;Back to Top&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;/P&gt;&lt;P&gt;This table shows, for each model, the cutoff needed to capture a particular percentage of the good samples. For each cutoff, it shows below the estimated percentages of false positives and true negatives for the non-good samples. This table is designed to help you pick the cutoff value that best balances your desire to capture as many good samples as possible, while keeping the number of false positives at a minimum.&lt;/P&gt;
&lt;P&gt;The rates shown in this table are estimates derived from the cross-validated data; the actual numbers you would find on your own data may vary.&lt;/P&gt;
&lt;P&gt;Cutoffs which lead to 10% or greater false positives are displayed in &lt;B&gt;bold&lt;/B&gt; for ease of identification. &lt;/P&gt;
&lt;table&gt;
&lt;tr&gt;&lt;th&gt;Model Name&lt;/th&gt;&lt;th&gt;99%&lt;/th&gt;&lt;th&gt;95%&lt;/th&gt;&lt;th&gt;90%&lt;/th&gt;
&lt;th&gt;70%&lt;/th&gt;&lt;th&gt;50%&lt;/th&gt;&lt;th&gt;30%&lt;/th&gt;&lt;th&gt;10%&lt;/th&gt;&lt;th&gt;5%&lt;/th&gt;&lt;th&gt;1%&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;MY_Bayesian&lt;/td&gt;&lt;td&gt;-10.829&lt;br&gt;&lt;B&gt;11%&lt;/B&gt;/89%&lt;/td&gt;
&lt;td&gt;-1.734&lt;br&gt;2%/98%&lt;/td&gt;
&lt;td&gt;3.203&lt;br&gt;1%/99%&lt;/td&gt;
&lt;td&gt;8.660&lt;br&gt;1%/99%&lt;/td&gt;
&lt;td&gt;19.704&lt;br&gt;1%/99%&lt;/td&gt;
&lt;td&gt;30.748&lt;br&gt;1%/99%&lt;/td&gt;
&lt;td&gt;36.205&lt;br&gt;1%/99%&lt;/td&gt;
&lt;td&gt;41.143&lt;br&gt;1%/99%&lt;/td&gt;
&lt;td&gt;50.238&lt;br&gt;1%/99%&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;!-- Section --&gt;
&lt;!-- LinkText: Category Statistics Results--&gt;
&lt;P&gt;&lt;A name=&quot;CategoryStatisticsTable&quot;&gt;&lt;/A&gt;&lt;U&gt;&lt;H5&gt;Category Statistics Results&lt;/H5&gt;&lt;/U&gt;&lt;P align=&quot;right&quot;&gt;&lt;A href=&quot;#Top&quot;&gt;&lt;I&gt;Back to Top&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;/P&gt;&lt;P&gt;This table shows, for each category, statistics derived from the cross-validated predictions of the model built for that category as applied to members of that category and non-members of that category.  For each group, the number of members/nonmembers (N) is given; the mean prediction for each subset (Mean); and the estimate standard deviation of the predictions for each subset (StdDev).&lt;/P&gt;
&lt;P&gt;(Categories with one or no members do not have a mean and standard deviation, as there are too few predictions upon which to base them during cross-validation. Also, occasionally categories may contain many duplicate or highly-similar compounds which predict close or identical values, causing them to have unusually low standard deviation values.  These low values may be adjusted at time of use of these standard deviations for predicting, for example, percentile results.)&lt;/P&gt;
&lt;table&gt;&lt;tr&gt;&lt;th&gt;Output&lt;/th&gt;&lt;th&gt;&lt;center&gt;Category&lt;br&gt;N&lt;/center&gt;&lt;/th&gt;&lt;th&gt;&lt;center&gt;Category&lt;br&gt;Mean&amp;nbsp;(&amp;#0177;StdDev)&lt;/center&gt;&lt;/th&gt;&lt;th&gt;&lt;center&gt;Noncategory&lt;br&gt;N&lt;/center&gt;&lt;/th&gt;&lt;th&gt;&lt;center&gt;Noncategory&lt;br&gt;Mean&amp;nbsp;(&amp;#0177;StdDev)&lt;/center&gt;&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MY_Bayesian&lt;/td&gt;&lt;td&gt;&lt;center&gt;221&lt;/center&gt;&lt;/td&gt;&lt;td&gt;&lt;center&gt;19.70&amp;nbsp;(&amp;#0177;12.99)&lt;/center&gt;&lt;/td&gt;&lt;/td&gt;&lt;td&gt;&lt;center&gt;236&lt;/center&gt;&lt;/td&gt;&lt;td&gt;&lt;center&gt;-22.10&amp;nbsp;(&amp;#0177;9.06)&lt;/center&gt;&lt;/td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;!-- Section --&gt;
&lt;!-- LinkText: Non-validated Models Results--&gt;
&lt;P&gt;&lt;A name=&quot;NonValidatedTable&quot;&gt;&lt;/A&gt;&lt;U&gt;&lt;H5&gt;Non-validated Models Results&lt;/H5&gt;&lt;/U&gt;&lt;P align=&quot;right&quot;&gt;&lt;A href=&quot;#Top&quot;&gt;&lt;I&gt;Back to Top&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;/P&gt;&lt;P&gt;All categories contained enough samples for cross-validation.&lt;/P&gt;
&lt;!-- Section --&gt;
&lt;!-- LinkText: Training Data Information--&gt;
&lt;P&gt;&lt;A name=&quot;TrainingData&quot;&gt;&lt;/A&gt;&lt;U&gt;&lt;H5&gt;Training Data Information&lt;/H5&gt;&lt;/U&gt;&lt;P align=&quot;right&quot;&gt;&lt;A href=&quot;#Top&quot;&gt;&lt;I&gt;Back to Top&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;/P&gt;&lt;p&gt;The data used to train the model consisted of 457 samples. The following are the statistics for the independent (X) properties.&lt;/p&gt;
&lt;table&gt;
&lt;tr&gt;&lt;th&gt;Property&lt;/th&gt;&lt;th&gt;Min&lt;/th&gt;&lt;th&gt;Max&lt;/th&gt;&lt;th&gt;Mean&lt;/th&gt;&lt;th&gt;Std. Dev.&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ALogP&lt;/td&gt;&lt;td&gt;-2.331&lt;/td&gt;&lt;td&gt;8.437&lt;/td&gt;&lt;td&gt;4.2156&lt;/td&gt;&lt;td&gt;1.82&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Molecular_Weight&lt;/td&gt;&lt;td&gt;172.02&lt;/td&gt;&lt;td&gt;775.86&lt;/td&gt;&lt;td&gt;437.5&lt;/td&gt;&lt;td&gt;94.941&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Num_H_Donors&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;1.0372&lt;/td&gt;&lt;td&gt;0.89537&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Num_H_Acceptors&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;td&gt;4.1291&lt;/td&gt;&lt;td&gt;1.6455&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Num_RotatableBonds&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;20&lt;/td&gt;&lt;td&gt;5.1597&lt;/td&gt;&lt;td&gt;2.8886&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Num_Rings&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;7&lt;/td&gt;&lt;td&gt;3.5492&lt;/td&gt;&lt;td&gt;1.3631&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Num_AromaticRings&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;2.5405&lt;/td&gt;&lt;td&gt;1.1718&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Molecular_FractionalPolarSurfaceArea&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0.657&lt;/td&gt;&lt;td&gt;0.20343&lt;/td&gt;&lt;td&gt;0.081987&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ECFP_6&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;td&gt;N/A&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;The test to identify &quot;good&quot; samples is: &lt;pre&gt;property(&quot;activity&quot;) is defined AND property(&quot;activity&quot;) = 1&lt;/pre&gt;&lt;/p&gt;
You can extend this model by adding your own training data to it to create a new model. Use the &lt;I&gt;New Model from Old&lt;/I&gt; component to do this. The new training samples must contain the properties as specified above (except that they need not contain properties that can be calculated on-demand). The &quot;good&quot; samples must be marked so that they can be identified by the above test. Because the original training data were not saved with this model, you will not be able to compute cross-validation statistics for the new model.&lt;!-- Section --&gt;
&lt;!-- LinkText: Model Construction Information--&gt;
&lt;P&gt;&lt;A name=&quot;ConstructionInfo&quot;&gt;&lt;/A&gt;&lt;U&gt;&lt;H5&gt;Model Construction Information&lt;/H5&gt;&lt;/U&gt;&lt;P align=&quot;right&quot;&gt;&lt;A href=&quot;#Top&quot;&gt;&lt;I&gt;Back to Top&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;/P&gt;
&lt;P&gt;Post-processing was performed to remove low-information bins. Low-information bins are those that have: normalized estimates in the range [-0.05, 0.05].&lt;/P&gt;
&lt;P&gt;For each property, the following table gives the original number of bins (&lt;I&gt;Original&lt;/I&gt;), the number removed due to too few samples (&lt;I&gt;TooFew&lt;/I&gt;), the number removed due to a poor normalized estimate (&lt;I&gt;Noninformative&lt;/I&gt;), and the final number of bins saved in the model (&lt;I&gt;Final&lt;/I&gt;).&lt;/P&gt;
&lt;table&gt;
&lt;tr&gt;&lt;th&gt;Property&lt;/th&gt;&lt;th&gt;Original&lt;/th&gt;&lt;th&gt;TooFew&lt;/th&gt;&lt;th&gt;Noninformative&lt;/th&gt;&lt;th&gt;Final&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ALogP&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Molecular_Weight&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;1&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Num_H_Donors&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;4&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Num_H_Acceptors&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;6&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Num_RotatableBonds&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;8&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Num_Rings&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Num_AromaticRings&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;5&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Molecular_FractionalPolarSurfaceArea&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;11&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;ECFP_6&lt;/td&gt;&lt;td&gt;9246&lt;/td&gt;&lt;td&gt;0&lt;/td&gt;&lt;td&gt;34&lt;/td&gt;&lt;td&gt;9212&lt;/td&gt;&lt;/tr&gt;
&lt;/table&gt;
&lt;/P&gt;
&lt;!-- Section --&gt;
&lt;!-- LinkText: Model Construction Parameters--&gt;
&lt;P&gt;&lt;A name=&quot;ModelParameters&quot;&gt;&lt;/A&gt;&lt;U&gt;&lt;H5&gt;Model Construction Parameters&lt;/H5&gt;&lt;/U&gt;&lt;P align=&quot;right&quot;&gt;&lt;A href=&quot;#Top&quot;&gt;&lt;I&gt;Back to Top&lt;/I&gt;&lt;/A&gt;&lt;/P&gt;&lt;/P&gt;&lt;p&gt;The following parameter values were specified by the learner component. Some items are internal parameters not exposed by the component. In the course of building the model, certain values may have been adjusted from the values shown below.&lt;/p&gt;

&lt;table&gt;&lt;tr&gt;&lt;th&gt;Parameter&lt;/th&gt;&lt;th&gt;Value&lt;/th&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;LearnedPropertyName&lt;/td&gt;&lt;td&gt;MY_Bayesian&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;TestForGood&lt;/td&gt;&lt;td&gt;property(&amp;quot;activity&amp;quot;) is defined AND property(&amp;quot;activity&amp;quot;) = 1&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;UseProperties&lt;/td&gt;&lt;td&gt;UserSet&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;PredefinedSet&lt;/td&gt;&lt;td&gt;ALogP, Molecular_Weight, Num_H_Donors, Num_H_Acceptors, Num_RotatableBonds, Molecular_FractionalPolarSurfaceArea, ECFP_6&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;UserSet&lt;/td&gt;&lt;td&gt;ALogP,Molecular_Weight,Num_H_Donors,Num_H_Acceptors,Num_RotatableBonds,Num_Rings,Num_AromaticRings,Molecular_FractionalPolarSurfaceArea,ECFP_6&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;IgnoreProperties&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;&lt;b&gt;Additional Options&lt;/b&gt;&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;NumberOfBins&lt;/td&gt;&lt;td&gt;10&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Learn Options&lt;/td&gt;&lt;td&gt;Validate Models, Remove Uninformative Bins, Equipopulate Bins&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Numeric Distance Function&lt;/td&gt;&lt;td&gt;Euclidean&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Numeric Scaling&lt;/td&gt;&lt;td&gt;Mean-Center and Scale, Scale by Number of Dimensions&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Fingerprint Distance Function&lt;/td&gt;&lt;td&gt;Tanimoto&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Model Domain Fingerprint&lt;/td&gt;&lt;td&gt;FCFP_2&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;DestinationFolder&lt;/td&gt;&lt;td&gt;16606/LearnedProperties&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Create Proxy Component&lt;/td&gt;&lt;td&gt;False&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Cost Matrix&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Post-Processing Script&lt;/td&gt;&lt;td&gt;resize(#op, 4);&amp;#xA;#op[1] := &apos;NormalizedProbability&apos;;&amp;#xA;#op[2] := &apos;Enrichment&apos;;&amp;#xA;#op[3] := &apos;EstPGood&apos;;&amp;#xA;#op[4] := &apos;Prediction&apos;;&amp;#xA;SetParam(&apos;Output Options&apos;,#op);&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;DuplicationEstimate&lt;/td&gt;&lt;td&gt;1.0&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;GoodDuplicationEstimate&lt;/td&gt;&lt;td&gt;1.0&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Additional Properties&lt;/td&gt;&lt;td&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td&gt;Max OPS Fingerprint Bits&lt;/td&gt;&lt;td&gt;1000&lt;/td&gt;&lt;/tr&gt;

&lt;/table&gt;
</sci:value>
				<sci:value>Generic Data</sci:value>
				<sci:value>Data records to calculate properties with</sci:value>
				<sci:value>Generic Data</sci:value>
				<sci:value>Data records which had at least one successful property calculation</sci:value>
				<sci:value>Generic Data</sci:value>
				<sci:value>Data records for which no successful property calculations occurred</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationVersion" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The server version when this component was registered</sci:help>
				<sci:value>19.1.0.1963</sci:value>
			</sci:arg>
			<sci:arg name="Component Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false"/>
			<sci:arg name="Protocol Sticky Notes" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Sticky Notes</sci:help>
			</sci:arg>
			<sci:arg name="ProtocolScale2" type="LongType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Scale</sci:help>
				<sci:value>100</sci:value>
			</sci:arg>
			<sci:arg name="Protocol Options" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Protocol Options</sci:help>
				<sci:legalval>Owner Access Only</sci:legalval>
			</sci:arg>
			<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The user who registered this component.</sci:help>
				<sci:value>16606</sci:value>
			</sci:arg>
			<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The date this component was registered.</sci:help>
				<sci:value>Sat Sep 17 18:19:46 2022</sci:value>
			</sci:arg>
			<sci:arg name="Component Path" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The original path within the database of this component.</sci:help>
				<sci:value>MY_Bayesian</sci:value>
			</sci:arg>
			<sci:arg name="Output Score" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>Whether to output the standard score, or the cross-validated score. (You should used the latter only when applying this model to the original training data.  The score on a sample is the score you would get by leaving the sample out and building the model on the remaining training data.)</sci:help>
				<sci:legalval selected="true">Standard</sci:legalval>
				<sci:legalval>Cross-Validated</sci:legalval>
			</sci:arg>
			<sci:arg name="Bayesian Option" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The type of Bayesian scoring to utilize</sci:help>
				<sci:legalval selected="true">SciTegic</sci:legalval>
				<sci:legalval>R1</sci:legalval>
				<sci:legalval>R2</sci:legalval>
				<sci:legalval>R3</sci:legalval>
				<sci:legalval>R4</sci:legalval>
				<sci:legalval>Avidon</sci:legalval>
				<sci:legalval>SciTegic_X1</sci:legalval>
				<sci:legalval>R1_X1</sci:legalval>
				<sci:legalval>R2_X1</sci:legalval>
				<sci:legalval>R3_X1</sci:legalval>
				<sci:legalval>R4_X1</sci:legalval>
				<sci:legalval>Avidon_X1</sci:legalval>
				<sci:legalval>SciTegic_X2</sci:legalval>
				<sci:legalval>R1_X2</sci:legalval>
				<sci:legalval>R2_X2</sci:legalval>
				<sci:legalval>R3_X2</sci:legalval>
				<sci:legalval>R4_X2</sci:legalval>
				<sci:legalval>Avidon_X2</sci:legalval>
			</sci:arg>
			<sci:arg name="Model Type" type="StringType" required="false" visibility="nevershow" multi="false">
				<sci:help>The type of the model</sci:help>
				<sci:value>Bayesian/SciTegic</sci:value>
			</sci:arg>
		</sci:component>
		<sci:protocol>
			<sci:data object="SciTegic.CalculateWithEquation.1">
				<sci:component name="MY_Bayesian" version="2">
					<sci:arg name="OnGeneralError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an recoverable error occurs during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="OnDataTypeError" type="StringType" required="true" visibility="hidden" multi="false">
						<sci:help>When an expected data type is not found during processing:  
  Halt: Terminate the execution of the network
  Fail: Continue execution of the network, passing data out the Fail(red) port
  Pass: Continue execution of the network, passing data out the Pass(green) port</sci:help>
						<sci:legalval selected="true">Halt</sci:legalval>
						<sci:legalval>Fail</sci:legalval>
						<sci:legalval>Pass</sci:legalval>
					</sci:arg>
					<sci:arg name="Output" type="StringType" required="true" visibility="visible" multi="true">
						<sci:help>Specifies the name of the model&apos;s output property.</sci:help>
						<sci:value>$(Output)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentAttributes" type="StringType" required="false" visibility="hidden" multi="true">
						<sci:help>Component Attributes</sci:help>
						<sci:legalval selected="true">ComponentTakesInput</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsPass</sci:legalval>
						<sci:legalval selected="true">ComponentReturnsFail</sci:legalval>
						<sci:legalval>ComponentRunsLocal</sci:legalval>
					</sci:arg>
					<sci:arg name="Output Options" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>&lt;P&gt;These control which variants of the output scores will be generated for each selected model.  Selections other than &quot;NormalizedProbability&quot; causes the output property to the appended with a hash sign &quot;#&quot; and the name of the option.  Options are:&lt;/P&gt; &lt;UL&gt;
 &lt;LI&gt;NormalizedProbability: The standard Laplacian-modified Bayesian score.
 &lt;LI&gt;Enrichment: An estimate of enrichment, that is, the increased likelihood (versus random) of this sample being in the &quot;good&quot; category.
 &lt;LI&gt;EstPGood: The estimated probability that the sample is in the &quot;good&quot; category, based on an assumed normal distribution of scores within the good and non-good categories.
 &lt;LI&gt;Prediction: A True/False prediction using the best cutoff value estimated from leave-one-out cross-validation. The cutoff is chosen to minimize the average of the false positive rate and false negative rate.
 &lt;/UL&gt;
 You may select more than one of these options.  In that case, multiple properties will be output.</sci:help>
						<sci:value>$(Output Options)</sci:value>
					</sci:arg>
					<sci:arg name="Preferred Class Cutoff" type="StringType" required="false" visibility="visible" multi="true">
						<sci:help>Cutoff value for distinguishing &quot;good&quot; from &quot;bad&quot; samples when making predictions. &quot;Default&quot; indicates that the cutoff derived from leave-one-out cross-validation when building the model should be used. 
&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt;
&lt;ul&gt;
&lt;li&gt;Classification models generate numerical scores or probabilities as their raw output. A cutoff value is then used in order to convert these scores into class predictions. Adjusting the cutoff from its default value may yield better class predictions for some models, particularly when the model&apos;s training data were imbalanced. Changing the value of &lt;i&gt;Preferred Class Cutoff&lt;/i&gt; changes the class predictions but has no effect on the output scores.
&lt;/ul&gt;</sci:help>
						<sci:value>$(Preferred Class Cutoff)</sci:value>
					</sci:arg>
					<sci:arg name="Error Option" type="StringType" required="false" visibility="visible" multi="false">
						<sci:help>&lt;P&gt;This controls what happens when a model fails to calculate its output. The options are:&lt;/P&gt; &lt;UL&gt;
 &lt;LI&gt;&lt;B&gt;Leave Undefined:&lt;/B&gt; Leave the property undefined.
 &lt;LI&gt;&lt;B&gt;Return NULL:&lt;/B&gt; Return the property with the string NULL.
 &lt;LI&gt;&lt;B&gt;Return Error Text:&lt;/B&gt; Return text containing information about why the output could not be calculated.
 &lt;/UL&gt;
</sci:help>
						<sci:value>$(Error Option)</sci:value>
					</sci:arg>
					<sci:arg name="Use Memory Cache" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies whether to cache model in memory to reduce startup time when making predictions over multiple protocol runs. Requires the use of protocol pooling.</sci:help>
						<sci:value>$(Use Memory Cache)</sci:value>
					</sci:arg>
					<sci:arg name="Clear Cache When Done" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies whether clear the cached model when finished. Set this to True when no further calculations will be done with the model, and you wish to free the memory the model is consuming.</sci:help>
						<sci:value>$(Clear Cache When Done)</sci:value>
					</sci:arg>
					<sci:arg name="Allow Missing Data" type="BoolType" required="false" visibility="visible" multi="false">
						<sci:help>Specifies whether to calculate an output property when one or more input properties used in its calculation are missing. &lt;p&gt;If False, then the value specified by &lt;i&gt;Error Option&lt;/i&gt; is assigned to the property when any input property is missing, and the data record is sent out the Fail port. &lt;p&gt;If True, the output property is calculated even when input properties are missing, with any contribution from missing properties omitted from the calculation. The resulting prediction is sent out the Pass port along with a property named &lt;b&gt;ErrorText&lt;/b&gt; containing the value &quot;CalculationMissingRequiredProperties&quot;. Use this option when you view a possibly flawed prediction based on incomplete data as better than no prediction at all.</sci:help>
						<sci:value>$(Allow Missing Data)</sci:value>
					</sci:arg>
					<sci:arg name="CustomErrorText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Custom Error Message</sci:help>
					</sci:arg>
					<sci:arg name="ComponentIcon" type="StringType" required="true" visibility="nevershow" multi="false">
						<sci:help>Component Icon</sci:help>
						<sci:value>ComponentNode</sci:value>
					</sci:arg>
					<sci:arg name="Registrant" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Registrant</sci:help>
						<sci:value>scitegic/generic</sci:value>
					</sci:arg>
					<sci:arg name="RegistrationDate" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Registrant Date</sci:help>
						<sci:value>Wed Apr 09 11:54:40 2003</sci:value>
					</sci:arg>
					<sci:arg name="ComponentGUID" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>GUID</sci:help>
						<sci:value>{91FF8747-EE4F-4EE0-A377-21CEA0562DB8}</sci:value>
					</sci:arg>
					<sci:arg name="DerivedFrom" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The component this component is based upon.</sci:help>
						<sci:value>CalcWithEquation</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisplayName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>MY_Bayesian</sci:value>
					</sci:arg>
					<sci:arg name="ComponentDisabled" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Disabled</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="ComponentPoint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Component Point</sci:help>
						<sci:value>85 -50</sci:value>
					</sci:arg>
					<sci:arg name="ComponentHelp" type="StringType" required="false" visibility="nevershow" multi="true">
						<sci:help>Fancy Help</sci:help>
						<sci:value>100</sci:value>
						<sci:value>An internal component created when you learn a model of some data. Do not directly use this component.</sci:value>
						<sci:value>This is an internal component that should not be used directly.</sci:value>
						<sci:value>Generic Data</sci:value>
						<sci:value/>
						<sci:value>Generic Data</sci:value>
						<sci:value/>
						<sci:value>Generic Data</sci:value>
						<sci:value/>
					</sci:arg>
					<sci:arg name="IsLearnedModelImplementation" type="BoolType" required="false" visibility="nevershow" multi="false">
						<sci:value>true</sci:value>
					</sci:arg>
					<sci:arg name="Output Score" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>Whether to output the standard score, or the cross-validated score. (You should used the latter only when applying this model to the original training data.  The score on a sample is the score you would get by leaving the sample out and building the model on the remaining training data.)</sci:help>
						<sci:value>$(Output Score)</sci:value>
					</sci:arg>
					<sci:arg name="Bayesian Option" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:help>The type of Bayesian scoring to utilize</sci:help>
						<sci:value>$(Bayesian Option)</sci:value>
					</sci:arg>
					<sci:arg name="ComponentLocalID" type="LongType" required="false" visibility="nevershow" multi="false">
						<sci:help>Local Component Identifier</sci:help>
						<sci:value>0</sci:value>
					</sci:arg>
					<sci:arg name="Relearn Component" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>{22699AB0-7583-4062-976F-46E680B2CBFF}</sci:value>
					</sci:arg>
					<sci:arg name="Relearn PointInfoText" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>4,9,3;ALogP;IsNumber;NoSubtype;SciTegic.value.DoubleValue;4;1;1024;2;1;-2.331;8.437;1926.545;9635.32148899999;457;457;4.21563457330416;1.8199669244438;;0,3;Molecular_Weight;IsNumber;NoSubtype;SciTegic.value.DoubleValue;4;1;1024;2;1;172.02254;775.86208;199935.32913;91590018.3085636;457;457;437.495249737418;94.940515287786;;0,3;Num_H_Donors;IsNumber;NoSubtype;SciTegic.value.IntegerValue;4;1;1024;2;1;0;4;474;858;457;457;1.03719912472648;0.895365669684738;;0,3;Num_H_Acceptors;IsNumber;NoSubtype;SciTegic.value.IntegerValue;4;1;1024;2;1;0;10;1887;9029;457;457;4.12910284463895;1.64548512474854;;0,3;Num_RotatableBonds;IsNumber;NoSubtype;SciTegic.value.IntegerValue;4;1;1024;2;1;0;20;2358;15980;457;457;5.15973741794311;2.88864795722258;;0,3;Num_Rings;IsNumber;NoSubtype;SciTegic.value.IntegerValue;4;1;1024;2;1;0;7;1622;6606;457;457;3.5492341356674;1.36311381849088;;0,3;Num_AromaticRings;IsNumber;NoSubtype;SciTegic.value.IntegerValue;4;1;1024;2;1;0;5;1161;3577;457;457;2.54048140043764;1.1717882629736;;0,3;Molecular_FractionalPolarSurfaceArea;IsNumber;NoSubtype;SciTegic.value.DoubleValue;4;1;1024;2;1;0;0.657;92.966;21.983674;457;457;0.203426695842451;8.19871873737531e-002;;0,3;ECFP_6;IsFingerprint;NoSubtype;SciTegic.value.IntegerFingerprintValue;0;1;1024;2;1;0;0;0;0;0;0;0;0;;0,1088,1024,L2Norm,Tanimoto,Unknown,,0</sci:value>
					</sci:arg>
					<sci:arg name="Relearn LearnedPropertyName" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>MY_Bayesian</sci:value>
					</sci:arg>
					<sci:arg name="Relearn TestForGood" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>property(&quot;activity&quot;) is defined AND property(&quot;activity&quot;) = 1</sci:value>
					</sci:arg>
					<sci:arg name="Relearn WhenFinished" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Nothing</sci:value>
					</sci:arg>
					<sci:arg name="Relearn Learn Options" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Validate Models</sci:value>
						<sci:value>Remove Uninformative Bins</sci:value>
						<sci:value>Equipopulate Bins</sci:value>
					</sci:arg>
					<sci:arg name="Relearn Model Domain Fingerprint" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>FCFP_2</sci:value>
					</sci:arg>
					<sci:arg name="Relearn Numeric Distance Function" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Euclidean</sci:value>
					</sci:arg>
					<sci:arg name="Relearn Numeric Scaling" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Mean-Center and Scale</sci:value>
						<sci:value>Scale by Number of Dimensions</sci:value>
					</sci:arg>
					<sci:arg name="Relearn Fingerprint Distance Function" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>Tanimoto</sci:value>
					</sci:arg>
					<sci:arg name="Relearn Additional Properties" type="StringType" required="false" visibility="nevershow" multi="false"/>
					<sci:arg name="Relearn DestinationFolder" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>16606/LearnedProperties</sci:value>
					</sci:arg>
					<sci:arg name="Relearn NumberOfBins" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>10</sci:value>
					</sci:arg>
					<sci:arg name="Relearn Post-Processing Script" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>resize(#op, 4);
#op[1] := &apos;NormalizedProbability&apos;;
#op[2] := &apos;Enrichment&apos;;
#op[3] := &apos;EstPGood&apos;;
#op[4] := &apos;Prediction&apos;;
SetParam(&apos;Output Options&apos;,#op);</sci:value>
					</sci:arg>
					<sci:arg name="Relearn PointCalculator" type="StringType" required="false" visibility="nevershow" multi="false">
						<sci:value>xNH68CkFAAA0LDksMztBTG9nUDtJc051bWJlcjtOb1N1YnR5cGU7U2NpVGVnaWMudmFsdWUuRG91YmxlVmFsdWU7NDsxOzEwMjQ7MjsxOy0yLjMzMTs4LjQzNzsxOTI2LjU0NTs5NjM1LjMyMTQ4ODk5OTk5OzQ1Nzs0NTc7NC4yMTU2MzQ1NzMzMDQxNjsxLjgxOTk2NjkyNDQ0Mzg7OzAsMztNb2xlY3VsYXJfV2VpZ2h0O0lzTnVtYmVyO05vU3VidHlwZTtTY2lUZWdpYy52YWx1ZS5Eb3VibGVWYWx1ZTs0OzE7MTAyNDsyOzE7MTcyLjAyMjU0Ozc3NS44NjIwODsxOTk5MzUuMzI5MTM7OTE1OTAwMTguMzA4NTYzNjs0NTc7NDU3OzQzNy40OTUyNDk3Mzc0MTg7OTQuOTQwNTE1Mjg3Nzg2OzswLDM7TnVtX0hfRG9ub3JzO0lzTnVtYmVyO05vU3VidHlwZTtTY2lUZWdpYy52YWx1ZS5JbnRlZ2VyVmFsdWU7NDsxOzEwMjQ7MjsxOzA7NDs0NzQ7ODU4OzQ1Nzs0NTc7MS4wMzcxOTkxMjQ3MjY0ODswLjg5NTM2NTY2OTY4NDczODs7MCwzO051bV9IX0FjY2VwdG9ycztJc051bWJlcjtOb1N1YnR5cGU7U2NpVGVnaWMudmFsdWUuSW50ZWdlclZhbHVlOzQ7MTsxMDI0OzI7MTswOzEwOzE4ODc7OTAyOTs0NTc7NDU3OzQuMTI5MTAyODQ0NjM4OTU7MS42NDU0ODUxMjQ3NDg1NDs7MCwzO051bV9Sb3RhdGFibGVCb25kcztJc051bWJlcjtOb1N1YnR5cGU7U2NpVGVnaWMudmFsdWUuSW50ZWdlclZhbHVlOzQ7MTsxMDI0OzI7MTswOzIwOzIzNTg7MTU5ODA7NDU3OzQ1Nzs1LjE1OTczNzQxNzk0MzExOzIuODg4NjQ3OTU3MjIyNTg7OzAsMztOdW1fUmluZ3M7SXNOdW1iZXI7Tm9TdWJ0eXBlO1NjaVRlZ2ljLnZhbHVlLkludGVnZXJWYWx1ZTs0OzE7MTAyNDsyOzE7MDs3OzE2MjI7NjYwNjs0NTc7NDU3OzMuNTQ5MjM0MTM1NjY3NDsxLjM2MzExMzgxODQ5MDg4OzswLDM7TnVtX0Fyb21hdGljUmluZ3M7SXNOdW1iZXI7Tm9TdWJ0eXBlO1NjaVRlZ2ljLnZhbHVlLkludGVnZXJWYWx1ZTs0OzE7MTAyNDsyOzE7MDs1OzExNjE7MzU3Nzs0NTc7NDU3OzIuNTQwNDgxNDAwNDM3NjQ7MS4xNzE3ODgyNjI5NzM2OzswLDM7TW9sZWN1bGFyX0ZyYWN0aW9uYWxQb2xhclN1cmZhY2VBcmVhO0lzTnVtYmVyO05vU3VidHlwZTtTY2lUZWdpYy52YWx1ZS5Eb3VibGVWYWx1ZTs0OzE7MTAyNDsyOzE7MDswLjY1Nzs5Mi45NjY7MjEuOTgzNjc0OzQ1Nzs0NTc7MC4yMDM0MjY2OTU4NDI0NTE7OC4xOTg3MTg3MzczNzUzMWUtMDAyOzswLDM7RUNGUF82O0lzRmluZ2VycHJpbnQ7Tm9TdWJ0eXBlO1NjaVRlZ2ljLnZhbHVlLkludGVnZXJGaW5nZXJwcmludFZhbHVlOzA7MTsxMDI0OzI7MTswOzA7MDswOzA7MDswOzA7OzAsMTA4OCwxMDI0LEwyTm9ybSxUYW5pbW90byxVbmtub3duLCww9gLwkgMAAPDJAQAA9t359gn69gVBTG9nUPr2EE1vbGVjdWxhcl9XZWlnaHT69gxOdW1fSF9Eb25vcnP69g9OdW1fSF9BY2NlcHRvcnP69hJOdW1fUm90YXRhYmxlQm9uZHP69glOdW1fUmluZ3P69hFOdW1fQXJvbWF0aWNSaW5nc/r2JE1vbGVjdWxhcl9GcmFjdGlvbmFsUG9sYXJTdXJmYWNlQXJlYfr2BkVDRlBfNvYJ+vYFQUxvZ1D69hBNb2xlY3VsYXJfV2VpZ2h0+vYMTnVtX0hfRG9ub3Jz+vYPTnVtX0hfQWNjZXB0b3Jz+vYSTnVtX1JvdGF0YWJsZUJvbmRz+vYJTnVtX1Jpbmdz+vYRTnVtX0Fyb21hdGljUmluZ3P69iRNb2xlY3VsYXJfRnJhY3Rpb25hbFBvbGFyU3VyZmFjZUFyZWH69gZFQ0ZQXzb2Cfr2BUFMb2dQ+vYQTW9sZWN1bGFyX1dlaWdodPr2DE51bV9IX0Rvbm9yc/r2D051bV9IX0FjY2VwdG9yc/r2Ek51bV9Sb3RhdGFibGVCb25kc/r2CU51bV9SaW5nc/r2EU51bV9Bcm9tYXRpY1Jpbmdz+vYkTW9sZWN1bGFyX0ZyYWN0aW9uYWxQb2xhclN1cmZhY2VBcmVh+vYGRUNGUF828fH2Cfr2BUFMb2dQ+vYQTW9sZWN1bGFyX1dlaWdodPr2DE51bV9IX0Rvbm9yc/r2D051bV9IX0FjY2VwdG9yc/r2Ek51bV9Sb3RhdGFibGVCb25kc/r2CU51bV9SaW5nc/r2EU51bV9Bcm9tYXRpY1Jpbmdz+vYkTW9sZWN1bGFyX0ZyYWN0aW9uYWxQb2xhclN1cmZhY2VBcmVh+vYGRUNGUF82+vH69hJDb2xsZWN0IFN0YXRpc3RpY3P69gRHb29k+vY8cHJvcGVydHkoImFjdGl2aXR5IikgaXMgZGVmaW5lZCBBTkQgcHJvcGVydHkoImFjdGl2aXR5IikgPSAx+vYTQWxsUHJvcGVydGllc09uR29vZPr2EkNhbGN1bGF0YWJsZU9uR29vZPr2EENhbGN1bGFibGVPbkdvb2Tx</sci:value>
					</sci:arg>
				</sci:component>
				<sci:proplist>
					<sci:propval name="VariableSetStatisticsCompressed">true</sci:propval>
					<sci:propval name="VariableSetStatisticsUncompressedSize" lVal="157366"/>
					<sci:propval name="VariableSetStatisticsSerialization" base64="UI1"></sci:propval>
					<sci:propval name="DuplicationEstimate" dblVal="1"/>
					<sci:propval name="GoodDuplicationEstimate" dblVal="1"/>
					<sci:propval name="Model Type">Bayesian/SciTegic</sci:propval>
					<sci:propval name="vcEquation_Vars_MY_Bayesian" base64="UI1">pvYC8PoBAACo0fYJ9iqp9gL69gVBTG9nUPr2GlNjaVRlZ2ljLnZhbHVlLkRvdWJsZVZhbHVl0fj2Nan2Avr2EE1vbGVjdWxhcl9XZWlnaHT69hpTY2lUZWdpYy52YWx1ZS5Eb3VibGVWYWx1ZdH49jKp9gL69gxOdW1fSF9Eb25vcnP69htTY2lUZWdpYy52YWx1ZS5JbnRlZ2VyVmFsdWXR+PY1qfYC+vYPTnVtX0hfQWNjZXB0b3Jz+vYbU2NpVGVnaWMudmFsdWUuSW50ZWdlclZhbHVl0fj2OKn2Avr2Ek51bV9Sb3RhdGFibGVCb25kc/r2G1NjaVRlZ2ljLnZhbHVlLkludGVnZXJWYWx1ZdH49i+p9gL69glOdW1fUmluZ3P69htTY2lUZWdpYy52YWx1ZS5JbnRlZ2VyVmFsdWXR+PY3qfYC+vYRTnVtX0Fyb21hdGljUmluZ3P69htTY2lUZWdpYy52YWx1ZS5JbnRlZ2VyVmFsdWXR+PZJqfYC+vYkTW9sZWN1bGFyX0ZyYWN0aW9uYWxQb2xhclN1cmZhY2VBcmVh+vYaU2NpVGVnaWMudmFsdWUuRG91YmxlVmFsdWXR+PY3qfYC+vYGRUNGUF82+vYmU2NpVGVnaWMudmFsdWUuSW50ZWdlckZpbmdlcnByaW50VmFsdWXR+PYJ9i2q9gX69gVBTG9nUPr2GlNjaVRlZ2ljLnZhbHVlLkRvdWJsZVZhbHVl0/HT8fn2OKr2Bfr2EE1vbGVjdWxhcl9XZWlnaHT69hpTY2lUZWdpYy52YWx1ZS5Eb3VibGVWYWx1ZdPR0/H59jaq9gX69gxOdW1fSF9Eb25vcnP69htTY2lUZWdpYy52YWx1ZS5JbnRlZ2VyVmFsdWXT9gLT8fn2Oar2Bfr2D051bV9IX0FjY2VwdG9yc/r2G1NjaVRlZ2ljLnZhbHVlLkludGVnZXJWYWx1ZdP2A9Px+fY8qvYF+vYSTnVtX1JvdGF0YWJsZUJvbmRz+vYbU2NpVGVnaWMudmFsdWUuSW50ZWdlclZhbHVl0/YE0/H59jOq9gX69glOdW1fUmluZ3P69htTY2lUZWdpYy52YWx1ZS5JbnRlZ2VyVmFsdWXT9gXT8fn2O6r2Bfr2EU51bV9Bcm9tYXRpY1Jpbmdz+vYbU2NpVGVnaWMudmFsdWUuSW50ZWdlclZhbHVl0/YG0/H59k2q9gX69iRNb2xlY3VsYXJfRnJhY3Rpb25hbFBvbGFyU3VyZmFjZUFyZWH69hpTY2lUZWdpYy52YWx1ZS5Eb3VibGVWYWx1ZdP2B9Px+fY7qvYF+vYGRUNGUF82+vYmU2NpVGVnaWMudmFsdWUuSW50ZWdlckZpbmdlcnByaW50VmFsdWXT9gjT8fnx</sci:propval>
					<sci:propval name="vcEquation_Vars__Props_MY_Bayesian_EQN_NONCATN" lVal="236"/>
					<sci:propval name="vcEquation_Vars__Props_MY_Bayesian_EQN_CATN" lVal="221"/>
					<sci:propval name="vcEquation_Vars__Props_MY_Bayesian_EQN_NONCATMEAN" dblVal="-22.0969876943202"/>
					<sci:propval name="vcEquation_Vars__Props_MY_Bayesian_EQN_NONCATSTDDEV" dblVal="9.05506940835414"/>
					<sci:propval name="vcEquation_Vars__Props_MY_Bayesian_EQN_CATMEAN" dblVal="19.7043195228684"/>
					<sci:propval name="vcEquation_Vars__Props_MY_Bayesian_EQN_CATSTDDEV" dblVal="12.9929118322685"/>
					<sci:propval name="vcEquation_Vars__Props_MY_Bayesian_EQN_AUC" dblVal="0.991506250479331"/>
					<sci:propval name="vcEquation_Vars__Props_MY_Bayesian_EQN_CUTOFF" dblVal="-6.01677514457119"/>
					<sci:propval name="vcEquation_Vars__Props_MY_Bayesian_EQN_TP" lVal="210"/>
					<sci:propval name="vcEquation_Vars__Props_MY_Bayesian_EQN_FN" lVal="11"/>
					<sci:propval name="vcEquation_Vars__Props_MY_Bayesian_EQN_FP" lVal="3"/>
					<sci:propval name="vcEquation_Vars__Props_MY_Bayesian_EQN_TN" lVal="233"/>
					<sci:mpropval name="vcEquation_Vars__Props_MY_Bayesian_EQN_ENRICHPROPORTION" type="DoubleType">
						<sci:value dblVal="1.e-002"/>
						<sci:value dblVal="5.e-002"/>
						<sci:value dblVal="0.1"/>
						<sci:value dblVal="0.25"/>
						<sci:value dblVal="0.5"/>
						<sci:value dblVal="0.75"/>
						<sci:value dblVal="0.9"/>
						<sci:value dblVal="0.95"/>
						<sci:value dblVal="0.99"/>
					</sci:mpropval>
					<sci:mpropval name="vcEquation_Vars__Props_MY_Bayesian_EQN_ENRICHCAPTURE" type="DoubleType">
						<sci:value dblVal="1.80995475113122e-002"/>
						<sci:value dblVal="9.95475113122172e-002"/>
						<sci:value dblVal="0.203619909502262"/>
						<sci:value dblVal="0.515837104072398"/>
						<sci:value dblVal="0.968325791855204"/>
						<sci:value dblVal="1"/>
						<sci:value dblVal="1"/>
						<sci:value dblVal="1"/>
						<sci:value dblVal="1"/>
					</sci:mpropval>
					<sci:mpropval name="vcEquation_Vars__Props_MY_Bayesian" type="StringType">
						<sci:value>EQN_NONCATN</sci:value>
						<sci:value>EQN_CATN</sci:value>
						<sci:value>EQN_NONCATMEAN</sci:value>
						<sci:value>EQN_NONCATSTDDEV</sci:value>
						<sci:value>EQN_CATMEAN</sci:value>
						<sci:value>EQN_CATSTDDEV</sci:value>
						<sci:value>EQN_AUC</sci:value>
						<sci:value>EQN_CUTOFF</sci:value>
						<sci:value>EQN_TP</sci:value>
						<sci:value>EQN_FN</sci:value>
						<sci:value>EQN_FP</sci:value>
						<sci:value>EQN_TN</sci:value>
						<sci:value>EQN_ENRICHPROPORTION</sci:value>
						<sci:value>EQN_ENRICHCAPTURE</sci:value>
					</sci:mpropval>
					<sci:mpropval name="vcEquation_MY_Bayesian" type="AnyType">
						<sci:value lVal="3412"/>
						<sci:value lVal="11"/>
						<sci:value/>
						<sci:value lVal="0"/>
						<sci:value lVal="1"/>
						<sci:value lVal="0"/>
						<sci:value>MY_Bayesian</sci:value>
						<sci:value>Good</sci:value>
						<sci:value/>
						<sci:value/>
						<sci:value>Sat Sep 17 18:19:46 2022</sci:value>
						<sci:value>SciTegic.value.DoubleValue</sci:value>
						<sci:value dblVal="-1"/>
						<sci:value dblVal="-1"/>
						<sci:value lVal="-1"/>
						<sci:value lVal="-1"/>
						<sci:value/>
						<sci:value/>
						<sci:value lVal="6667"/>
						<sci:value lVal="4"/>
						<sci:value>DistributionBF</sci:value>
						<sci:value lVal="9"/>
						<sci:value lVal="0"/>
						<sci:value>NormalizedEstimate</sci:value>
						<sci:value lVal="0"/>
						<sci:value lVal="1"/>
						<sci:value lVal="-99"/>
						<sci:value lVal="0"/>
						<sci:value lVal="-1"/>
					</sci:mpropval>
					<sci:propval name="vcSimpleEquationNames">MY_Bayesian</sci:propval>
					<sci:propval name="vcSimpleEquationTypes">vcSimpleLinearEquation</sci:propval>
					<sci:mpropval name="vcLinearEquation_MY_Bayesian_ErrorStats" type="AnyType">
						<sci:value dblVal="0"/>
						<sci:value lVal="0"/>
						<sci:value lVal="0"/>
					</sci:mpropval>
					<sci:propval name="vcLinearEquation_MY_Bayesian_ErrorStats_XtXinv" base64="UI1"/>
				</sci:proplist>
			</sci:data>
			<sci:version iVal="1"/>
		</sci:protocol>
	</sci:dbitem>
</sci:data>
